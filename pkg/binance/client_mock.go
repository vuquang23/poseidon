// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/vuquang23/poseidon/pkg/binance (interfaces: IClient)

// Package binance is a generated GoMock package.
package binance

import (
	context "context"
	reflect "reflect"

	binance "github.com/adshao/go-binance/v2"
	gomock "github.com/golang/mock/gomock"
)

// MockIClient is a mock of IClient interface.
type MockIClient struct {
	ctrl     *gomock.Controller
	recorder *MockIClientMockRecorder
}

// MockIClientMockRecorder is the mock recorder for MockIClient.
type MockIClientMockRecorder struct {
	mock *MockIClient
}

// NewMockIClient creates a new mock instance.
func NewMockIClient(ctrl *gomock.Controller) *MockIClient {
	mock := &MockIClient{ctrl: ctrl}
	mock.recorder = &MockIClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIClient) EXPECT() *MockIClientMockRecorder {
	return m.recorder
}

// GetKlines mocks base method.
func (m *MockIClient) GetKlines(arg0 context.Context, arg1, arg2 int64, arg3 int, arg4, arg5 string) ([]*binance.Kline, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetKlines", arg0, arg1, arg2, arg3, arg4, arg5)
	ret0, _ := ret[0].([]*binance.Kline)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetKlines indicates an expected call of GetKlines.
func (mr *MockIClientMockRecorder) GetKlines(arg0, arg1, arg2, arg3, arg4, arg5 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKlines", reflect.TypeOf((*MockIClient)(nil).GetKlines), arg0, arg1, arg2, arg3, arg4, arg5)
}
